#ifndef K_ON_USER_H
#define K_ON_USER_H


class User {
public:
    User() {}  // Здесь будет устанавливаться соединение с БД
    ~User() {}

    void Handler();  // На вход от менеджера будет поступать map распарсенного запроса. Данный метод будет вызывать
                     // требуемые методы в зависимости от запроса, передавать им необходимые данные
                     // (логин пользователя). Возвращать будет полученный ответ от методов

    bool SignIn();   // Принимает данные от хэндлера. Сходит в базу БД и вернет ответ
    bool SignUp();   // Работает аналогично SignUp только никаких дополнительных данных возвращать не будет

    void GetPreference();     // Выдаст информацию о предпочтениях пользователя
    void DeletePreference();  // Удалить некоторое предпочтение пользователя (жанр музыки)
    void UpdatePreference();  // Увеличит "вес" некоторого предпочтения (в случае, если пользователь поставил лайк)
    void SetPreference();     // Установит новое предпочтение, либо установит первоначальные предпочтения (после того,
                              // как пользователь пройдет начальное тесторование)
    // Думаю для работы с предпочтениями лучше создать отдельный класс. Правильно?

private:
    // Класс для работы с БД. Буду использовать готовый или напишу некоторую обертку для работы с готовым
    bool isUserExists();  // Проверка существования пользователя
};


#endif //K_ON_USER_H
